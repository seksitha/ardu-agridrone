# hw definition file for processing by chibios_hwdef.py
# for FlyingmoonF407 hardware

# MCU class and specific type
MCU STM32F4xx STM32F407xx

# board ID for firmware load
APJ_BOARD_ID 1067

# crystal frequency
OSCILLATOR_HZ 8000000

FLASH_SIZE_KB 1024

define HAL_WITH_RAMTRON 1
# 1024=1kb 15360=15kb 16384=16kb 32768=32kb
define HAL_STORAGE_SIZE 16384 


# this is the STM32 timer that ChibiOS will use for the low level
# driver. This must be a 32 bit timer. We currently only support
# timers 2, 3, 4, 5 and 21. See hal_st_lld.c in ChibiOS for details

# ChibiOS system timer
STM32_ST_USE_TIMER 5

PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# telem1
PD5 USART2_TX USART2 NODMA
PD6 USART2_RX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# USART1 for console
PB6 USART1_TX USART1
PB7 USART1_RX USART1

# USART3 for GPS1
PD8 USART3_TX USART3 NODMA
PD9 USART3_RX USART3

# UART4 for telem2
#PD0 UART4_TX UART4 NODMA
#PD1 UART4_RX UART4 NODMA

# also USART6_RX for serial RC
PC7 TIM8_CH2 TIM8 RCIN PULLDOWN LOW DMA_CH0

# The normal usage of this ordering is:
# 1) SERIAL0: console (primary mavlink, USB)
# 2) SERIAL1: telem1
# 3) SERIAL2: telem2
# 4) SERIAL3: GPS1
# 5) SERIAL4: GPS2
# 6) SERIAL5: extra UART (usually RTOS debug console)

SERIAL_ORDER OTG1 USART2 EMPTY USART3 EMPTY USART1

STDOUT_SERIAL SD1
STDOUT_BAUDRATE 57600

#SPI2 for MPU
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2
PB12 MPU_CS CS
#  IRQ for MPU6500
PB0 DRDY_MPU6500 INPUT PULLUP

# SPI3 bus for reserve
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3
PA15 FRAM_CS CS SPEED_VERYLOW

PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1 
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2
# define the order that I2C buses 
I2C_ORDER I2C1 I2C2

#========================PINA==========================#
PA0    TIM2_CH1 TIM2 PWM(1)   GPIO(50)
PA1    TIM2_CH2 TIM2 PWM(2)   GPIO(51)
PA2    TIM2_CH3 TIM2 PWM(3)   GPIO(52)
PA3    TIM2_CH4 TIM2 PWM(4)   GPIO(53)
# this is the pin that senses USB being connected. It is an input pin
# setup as OPENDRAIN
PA9 VBUS INPUT OPENDRAIN
# PA15 FLASH_CS CS SPEED_VERYLOW

#========================PINC==========================#

# Now setup the pins for the microSD card, if available.
PC8 SDIO_D0 SDIO
PC9 SDIO_D1 SDIO
PC10 SDIO_D2 SDIO
PC11 SDIO_D3 SDIO     
PC12 SDIO_CK SDIO
PD2 SDIO_CMD SDIO

# analog in
PC0 PRESSURE_SENS ADC1 SCALE(2)
PC1 RSSI_IN ADC1 SCALE(2)
# define the primary battery connectors.
PC2 BATT_CURRENT_SENS ADC1 SCALE(2)
PC3 BATT_VOLTAGE_SENS ADC1 SCALE(2)
PC4 VDD_5V_SENS ADC1 SCALE(2)
PC5 FMU_SERVORAIL_VCC_SENS ADC1 SCALE(2) 
PC13 EXTERN_GPIO2 OUTPUT GPIO(2)
PC14 EXTERN_GPIO3 OUTPUT GPIO(3)
PC15 EXTERN_GPIO5 OUTPUT GPIO(5)

#========================PIND==========================#
# CAN Busses
# PD0 CAN1_RX CAN1
# PD1 CAN1_TX CAN1
# PD10 FRAM_CS CS
# PD11
PD12 TIM4_CH1 TIM4 PWM(9)   GPIO(58)
PD13 TIM4_CH2 TIM4 PWM(10) GPIO(59)
PD14 TIM4_CH3 TIM4 PWM(11) GPIO(60)
PD15 TIM4_CH4 TIM4 PWM(12) GPIO(61)

#========================PINE==========================#
# PE3 LED_RED OUTPUT GPIO(10)
# PE2 LED_GREEN OUTPUT GPIO(11)
# PE1 LED_BLUE OUTPUT GPIO(12)
# PE0 LED_YELOW OUTPUT GPIO(13)
# PWM output for buzzer
PE5 TIM9_CH1 TIM9 ALARM
PE6   EXTERN_GPIO4 OUTPUT GPIO(4)
PE4   EXTERN_GPIO1 OUTPUT GPIO(1)
PE9    TIM1_CH1 TIM1 PWM(5)   GPIO(54)
PE11  TIM1_CH2 TIM1 PWM(6)   GPIO(55)
PE13  TIM1_CH3 TIM1 PWM(7)   GPIO(56)
PE14  TIM1_CH4 TIM1 PWM(8)   GPIO(57)
# PE15 MPU_CS_1 CS

#======================== HAL Definitions ==========================#

# one baro
BARO BMP280 I2C:0:0x76    

SPIDEV icm20602         SPI2 DEVID1  MPU_CS  MODE3  2*MHZ  8*MHZ
SPIDEV ramtron          SPI3 DEVID1  FRAM_CS  MODE3 8*MHZ   8*MHZ

DMA_PRIORITY SPI2* SPI3* TIM1_CH2

# one IMU
IMU Invensense SPI:icm20602 ROTATION_YAW_270

define HAL_PROBE_EXTERNAL_I2C_COMPASSES

# enable FAT filesystem support
define HAL_OS_FATFS_IO 1

# now some defines for logging and terrain data files
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# 2nd bus is internal
define HAL_I2C_INTERNAL_MASK 2


define RELAY1_PIN_DEFAULT 1
define RELAY2_PIN_DEFAULT 2
define RELAY3_PIN_DEFAULT 3
define RELAY4_PIN_DEFAULT 4
define RELAY5_PIN_DEFAULT 5
define HAL_BATT_VOLT_PIN 13
define HAL_BATT_CURR_PIN 12
define HAL_BATT_VOLT_SCALE 20
define HAL_BATT_CURR_SCALE 17

define OSD_ENABLED 0

#To complementary channels work we define this
define STM32_PWM_USE_ADVANCED TRUE

#font for the osd

# disable SMBUS and fuel battery monitors to save flash
define AP_BATTMON_SMBUS_ENABLE 0
define AP_BATTMON_FUEL_ENABLE 0

# disable parachute and sprayer to save flash
define HAL_PARACHUTE_ENABLED 0
define HAL_SPRAYER_ENABLED 0

# save FLASH, but leave above when flash issue is fixed
define HAL_MINIMIZE_FEATURES 1

# save some flash
define HAL_GENERATOR_ENABLED 0
define AC_OAPATHPLANNER_ENABLED 0
define PRECISION_LANDING 0
define AP_OPTICALFLOW_ENABLED 0